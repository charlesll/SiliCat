setwd("/Users/charles/Dropbox/NeuralNetwork/Viscosity/H2O")
library("h2o")
localH2O = h2o.init()

visco_train = h2o.importFile(path = "/Users/charles/Dropbox/NeuralNetwork/Viscosity/data/H2O_train.txt")
visco_test = h2o.importFile(path = "/Users/charles/Dropbox/NeuralNetwork/Viscosity/data/H2O_test.txt")
visco_valid = h2o.importFile(path = "/Users/charles/Dropbox/NeuralNetwork/Viscosity/data/H2O_valid.txt")

model <- h2o.deeplearning(x = 1:15, y = 16, 
	training_frame = visco_train,
	validation_frame = visco_valid, 
	activation = c("Rectifier"), 
	hidden = c(15,7,10),
	autoencoder = F,
	#input_dropout_ratio = .1,
	#hidden_dropout_ratios = .1,
	epochs = 3000, 
	variable_importances = T,
	use_all_factor_levels = T,
	train_samples_per_iteration = -2,
	adaptive_rate = T,
	l1 = 0.0001, 
	l2 = 0.002, 
	shuffle_training_data = T, 
	reproducible = T,
	loss = "Automatic",
	score_interval = 5,
	score_training_samples = 10000,
	score_validation_samples = 0,
	score_duty_cycle = 0.1,
	overwrite_with_best_model = T,
	#seed = 7979706519224486000,
	rho = 0.995,
	epsilon = 1e-8,
	initial_weight_distribution = "UniformAdaptive",
	regression_stop  = 0.000001, 
	diagnostics = T,
	fast_mode = F,
	force_load_balance = T,
	single_node_mode = F,
	quiet_mode = F,
	sparse = F,
	col_major = F,
	average_activation = 0,
	sparsity_beta = 0,
	export_weights_and_biases = TRUE)
		   
ypred_h2o <- h2o.predict(model, visco_train)
ypred <- as.data.frame(ypred_h2o)

yvalid_h2o <- h2o.predict(model, visco_valid)
yvalid <- as.data.frame(yvalid_h2o)

ytest_h2o <- h2o.predict(model, visco_test)
ytest <- as.data.frame(ytest_h2o)

ytrain_plot = as.data.frame(visco_train)[16]
ytest_plot = as.data.frame(visco_test)[16]
yvalid_plot = as.data.frame(visco_valid)[16]

#attach(mtcars)
par(mfrow=c(2,2))
plot(ytrain_plot[,],ypred[,])
plot(yvalid_plot[,],yvalid[,])
plot(ytest_plot[,],ytest[,])

mse <- sqrt(1/length(ypred[,])*sum((ypred[,]-as.data.frame(visco_train)[16])^2))
mse_valid <- sqrt(1/length(yvalid[,])*sum((yvalid[,]-as.data.frame(visco_valid)[16])^2))
mse_test <- sqrt(1/length(ytest[,])*sum((ytest[,]-as.data.frame(visco_test)[16])^2))


#to get weights and biases:
weights1 <- as.data.frame(h2o.getFrame(h2o.weights(best_model,matrix_id=1)$name))
weights2 <- as.data.frame(h2o.getFrame(h2o.weights(best_model,matrix_id=2)$name))
weights3 <- as.data.frame(h2o.getFrame(h2o.weights(best_model,matrix_id=3)$name))
weights4 <- as.data.frame(h2o.getFrame(h2o.weights(best_model,matrix_id=4)$name)) 

biases1 <- as.data.frame(h2o.getFrame(h2o.biases(best_model,vector_id=1)$name))
biases2 <- as.data.frame(h2o.getFrame(h2o.biases(best_model,vector_id=2)$name))
biases3 <- as.data.frame(h2o.getFrame(h2o.biases(best_model,vector_id=3)$name))
biases4 <- as.data.frame(h2o.getFrame(h2o.biases(best_model,vector_id=4)$name))

write.table(weights1,'weights1.txt',sep = "\t")
write.table(weights2,'weights2.txt',sep = "\t")
write.table(weights3,'weights3.txt',sep = "\t")
write.table(weights3,'weights4.txt',sep = "\t")

write.table(biases1,'biases1.txt',sep = "\t")
write.table(biases2,'biases2.txt',sep = "\t")
write.table(biases3,'biases3.txt',sep = "\t")
write.table(biases3,'biases4.txt',sep = "\t")
